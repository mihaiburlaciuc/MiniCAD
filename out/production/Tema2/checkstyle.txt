Starting audit...
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:3: Using the '.*' form of import should be avoided - main.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:5:1: Import from illegal package - sun.java2d.pipe.BufferedBufImgOps. [IllegalImport]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:5:8: Unused import - sun.java2d.pipe.BufferedBufImgOps. [UnusedImports]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:7: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:10:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:12:31: Parameter x1 should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:13:31: Parameter x2 should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:14:31: Parameter y1 should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:15:31: Parameter y2 should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:16:31: Parameter img should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:17:31: Parameter color should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsLine.java:20:42: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:6: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:12:35: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:12:36: Parameter point should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:13:36: Parameter interiorColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:14:36: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:15:36: Parameter queue should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:16:36: Parameter image should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:29:31: Parameter startPoint should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:30:31: Parameter interiorColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:31:31: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:32:31: Parameter image should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:48: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:49: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:50: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/FloodFill.java:51: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:5:8: Unused import - org.omg.PortableInterceptor.INACTIVE. [UnusedImports]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:7: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:9:8: Unused import - java.nio.Buffer. [UnusedImports]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:12:39: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:12:40: Parameter xCenter should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:13:40: Parameter yCenter should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:14:40: Parameter x should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:15:40: Parameter y should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:16:40: Parameter color should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:17:40: Parameter image should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:50:9: Empty statement. [EmptyStatement]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:52:31: Parameter xCenter should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:53:31: Parameter yCenter should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:54:31: Parameter radius should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:55:31: Parameter image should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:56:31: Parameter color should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:59:21: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:67:25: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:67:39: '10' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:69:25: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/algorithms/BresenhamsCircle.java:69:33: '6' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:13:24: Parameter image should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:17:5: Class 'DrawVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DrawVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:18:23: Parameter e should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:27:5: Class 'DrawVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DrawVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:28:23: Parameter e should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:69:5: Class 'DrawVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DrawVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:70:23: Parameter e should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:109:5: Class 'DrawVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DrawVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:110:23: Parameter e should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:122:5: Class 'DrawVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DrawVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:123:23: Parameter e should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:149:5: Class 'DrawVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DrawVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:150:23: Parameter e should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:182:5: Class 'DrawVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DrawVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/DrawVisitor.java:183:23: Parameter e should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Form.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Form.java:9:17: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Form.java:13:5: Class 'Form' looks like designed for extension (can be subclassed), but the method 'getOutlineColor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Form' final or making the method 'getOutlineColor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:11:20: Parameter pointsNumber should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:12:20: Parameter points should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:13:20: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:14:20: Parameter interiorColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:21:5: Class 'Polygon' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Polygon' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:22:24: Parameter v should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:26:5: Class 'Polygon' looks like designed for extension (can be subclassed), but the method 'getCenterOfGravity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Polygon' final or making the method 'getCenterOfGravity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:39:5: Class 'Polygon' looks like designed for extension (can be subclassed), but the method 'getPointsNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Polygon' final or making the method 'getPointsNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:43:5: Class 'Polygon' looks like designed for extension (can be subclassed), but the method 'getPoints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Polygon' final or making the method 'getPoints' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Polygon.java:47:5: Class 'Polygon' looks like designed for extension (can be subclassed), but the method 'getInteriorColor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Polygon' final or making the method 'getInteriorColor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:11:20: Parameter centerX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:12:20: Parameter centerY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:13:20: Parameter horizontalDiagonalLength should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:14:20: Parameter verticalDiagonalLength should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:15:20: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:16:20: Parameter interiorColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:24:5: Class 'Diamond' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Diamond' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:25:24: Parameter v should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:29:5: Class 'Diamond' looks like designed for extension (can be subclassed), but the method 'getCenterOfGravity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Diamond' final or making the method 'getCenterOfGravity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:34:5: Class 'Diamond' looks like designed for extension (can be subclassed), but the method 'getCenter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Diamond' final or making the method 'getCenter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:38:5: Class 'Diamond' looks like designed for extension (can be subclassed), but the method 'getHorizontalDiagonalLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Diamond' final or making the method 'getHorizontalDiagonalLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:42:5: Class 'Diamond' looks like designed for extension (can be subclassed), but the method 'getVerticalDiagonalLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Diamond' final or making the method 'getVerticalDiagonalLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Diamond.java:46:5: Class 'Diamond' looks like designed for extension (can be subclassed), but the method 'getInteriorColor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Diamond' final or making the method 'getInteriorColor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:11:22: Parameter leftTopCornerX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:12:22: Parameter leftTopCornerY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:13:22: Parameter height should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:14:22: Parameter length should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:15:22: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:16:22: Parameter interiorColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:24:5: Class 'Rectangle' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rectangle' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:25:24: Parameter v should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:29:5: Class 'Rectangle' looks like designed for extension (can be subclassed), but the method 'getCenterOfGravity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rectangle' final or making the method 'getCenterOfGravity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:37:5: Class 'Rectangle' looks like designed for extension (can be subclassed), but the method 'getLeftTopCorner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rectangle' final or making the method 'getLeftTopCorner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:41:5: Class 'Rectangle' looks like designed for extension (can be subclassed), but the method 'getLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rectangle' final or making the method 'getLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:45:5: Class 'Rectangle' looks like designed for extension (can be subclassed), but the method 'getHeight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rectangle' final or making the method 'getHeight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Rectangle.java:49:5: Class 'Rectangle' looks like designed for extension (can be subclassed), but the method 'getInteriorColor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rectangle' final or making the method 'getInteriorColor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:9:10: Parameter startX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:9:22: Parameter startY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:9:34: Parameter stopX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:9:45: Parameter stopY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:9:56: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:15:5: Class 'Line' looks like designed for extension (can be subclassed), but the method 'getStart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Line' final or making the method 'getStart' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:19:5: Class 'Line' looks like designed for extension (can be subclassed), but the method 'getStop' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Line' final or making the method 'getStop' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:23:5: Class 'Line' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Line' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:24:24: Parameter v should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Line.java:28:5: Class 'Line' looks like designed for extension (can be subclassed), but the method 'getCenterOfGravity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Line' final or making the method 'getCenterOfGravity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:10:19: Parameter leftTopCornerX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:11:19: Parameter leftTopCornerY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:12:19: Parameter length should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:13:19: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:14:19: Parameter interiorColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:21:5: Class 'Square' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Square' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:22:24: Parameter v should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:26:5: Class 'Square' looks like designed for extension (can be subclassed), but the method 'getCenterOfGravity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Square' final or making the method 'getCenterOfGravity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:34:5: Class 'Square' looks like designed for extension (can be subclassed), but the method 'getLeftTopCorner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Square' final or making the method 'getLeftTopCorner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:38:5: Class 'Square' looks like designed for extension (can be subclassed), but the method 'getLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Square' final or making the method 'getLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Square.java:42:5: Class 'Square' looks like designed for extension (can be subclassed), but the method 'getInteriorColor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Square' final or making the method 'getInteriorColor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormTypes.java:14:15: Parameter formName should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Point.java:7:18: Parameter x should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Point.java:7:29: Parameter y should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Point.java:12:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'getX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'getX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Point.java:16:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'getY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'getY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Point.java:20:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'setX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'setX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Point.java:20:22: Parameter x should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Point.java:24:5: Class 'Point' looks like designed for extension (can be subclassed), but the method 'setY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Point' final or making the method 'setY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Point.java:24:22: Parameter y should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:7:35: Parameter canvas should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:7:50: Parameter img should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:15:34: Parameter stringRGB should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:15:52: Parameter a should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:16:88: '16' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:17:61: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:17:83: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:17:88: '16' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:18:61: '5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:18:83: '6' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:18:88: '16' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:24:44: Parameter point should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/ImageUtility.java:24:57: Parameter image should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:10:19: Parameter centerX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:11:12: Parameter centerY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:12:12: Parameter radius should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:13:12: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:14:13: Parameter interiorColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:21:5: Class 'Circle' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Circle' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:22:24: Parameter v should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:26:5: Class 'Circle' looks like designed for extension (can be subclassed), but the method 'getCenterOfGravity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Circle' final or making the method 'getCenterOfGravity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:31:5: Class 'Circle' looks like designed for extension (can be subclassed), but the method 'getCenter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Circle' final or making the method 'getCenter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:35:5: Class 'Circle' looks like designed for extension (can be subclassed), but the method 'getInteriorColor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Circle' final or making the method 'getInteriorColor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Circle.java:39:5: Class 'Circle' looks like designed for extension (can be subclassed), but the method 'getRadius' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Circle' final or making the method 'getRadius' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:6: First sentence should end with a period. [JavadocStyle]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:9: Class FormFactory should be declared as final. [FinalClass]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:12:28: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:12:28: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:14:25: Parameter formInfo should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:19:62: '5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:19:93: '6' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:22:48: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:23:48: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:26: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:26:66: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:26:97: '5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:27: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:27:67: '6' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:27:98: '7' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:30:48: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:34: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:34:66: '5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:34:97: '6' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:35: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:35:67: '7' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:35:98: '8' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:38:48: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:39:48: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:43: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:43:67: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:43:98: '5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:44: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:44:67: '6' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:44:98: '7' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:47:48: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:51: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:51:66: '7' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:51:97: '8' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:52: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:52:67: '9' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:52:98: '10' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:55:48: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:56:48: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:57:48: '5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:58:48: '6' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:62: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:62:66: '5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:62:97: '6' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:63: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:63:67: '7' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:63:98: '8' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:66:48: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:67:48: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:76: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:76:104: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:76:105: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:82:69: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:83:88: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:84:69: '5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/FormFactory.java:94:44: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:11:12: More than 7 parameters (found 8). [ParameterNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:11:21: Parameter point1X should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:12:21: Parameter point1Y should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:13:21: Parameter point2X should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:14:21: Parameter point2Y should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:15:21: Parameter point3X should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:16:21: Parameter point3Y should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:17:21: Parameter outlineColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:18:21: Parameter interiorColor should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:26:5: Class 'Triangle' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triangle' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:27:24: Parameter v should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:31:5: Class 'Triangle' looks like designed for extension (can be subclassed), but the method 'getCenterOfGravity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triangle' final or making the method 'getCenterOfGravity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:33:26: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:33:77: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:34:67: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:37:5: Class 'Triangle' looks like designed for extension (can be subclassed), but the method 'getPoint1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triangle' final or making the method 'getPoint1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:41:5: Class 'Triangle' looks like designed for extension (can be subclassed), but the method 'getPoint2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triangle' final or making the method 'getPoint2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:45:5: Class 'Triangle' looks like designed for extension (can be subclassed), but the method 'getPoint3' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triangle' final or making the method 'getPoint3' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Triangle.java:49:5: Class 'Triangle' looks like designed for extension (can be subclassed), but the method 'getInteriorColor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triangle' final or making the method 'getInteriorColor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Canvas.java:3: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/main/Canvas.java:10:19: Parameter height should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Canvas.java:10:35: Parameter length should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Canvas.java:10:51: Parameter color should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/main/Canvas.java:16:5: Class 'Canvas' looks like designed for extension (can be subclassed), but the method 'getHeight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Canvas' final or making the method 'getHeight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Canvas.java:20:5: Class 'Canvas' looks like designed for extension (can be subclassed), but the method 'getLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Canvas' final or making the method 'getLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/main/Canvas.java:24:5: Class 'Canvas' looks like designed for extension (can be subclassed), but the method 'getColor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Canvas' final or making the method 'getColor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:4: Using the '.*' form of import should be avoided - java.awt.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:6: Using the '.*' form of import should be avoided - java.io.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:8: Using the '.*' form of import should be avoided - main.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:9: Using the '.*' form of import should be avoided - algorithms.*. [AvoidStarImport]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:11:8: Unused import - org.omg.CORBA.CODESET_INCOMPATIBLE. [UnusedImports]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:15:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:17:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:38:61: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:38:92: '4' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:58:16: 'try' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:58:16: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:61:14: 'catch' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:61:14: '}' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:61:19: 'catch' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/mihai/workspace/Tema2/src/Main.java:61:34: '{' is not preceded with whitespace. [WhitespaceAround]
Audit done.
Checkstyle ends with 265 errors.
